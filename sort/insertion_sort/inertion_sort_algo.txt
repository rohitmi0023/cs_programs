Thinking...
* Insertion sort is all about how we INSERT the element assuming we have none at the beginning.
* Suppose we have stack of card on the table and we have to pick it up and arrange it.
* We start arranging the card from the 2nd time we pick the card up.
nth iteration(n = length of array)
* Our aim is to insert the 2nd card at the correct place.
* First assume it to be at the rightmost side i.e. last position.
* Then start going leftwards till we reach the starting element if it's less than the compared value. 
* Each time we shift leftwards, we increase the compared element index by 1.
* The position where we stop, we place the value there. 

Algorithm...
Insertion_Sort(a)
n = a.length
for i = 2 to n:
    key = a[i]
    j = i-1
    while j > 0 and key < a[j]:
        a[j+1] = a[j]
        j = j -1
    a[j+1] = key